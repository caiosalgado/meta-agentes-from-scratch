{
  "problems": [
    {
      "id": "isPalindrome",
      "description": "Given an integer x, return true if x is a palindrome, and false otherwise.\n\nConstraints:\n-231 <= x <= 231 - 1",
      "initial_code": "class Solution:\n    def isPalindrome(self, x: int) -> bool:",
      "tests": [
        {
          "input": {
            "x": 121
          },
          "expected": true
        },
        {
          "input": {
            "x": -121
          },
          "expected": false
        },
        {
          "input": {
            "x": 10
          },
          "expected": false
        }
      ]
    },
    {
      "id": "romanToInt",
      "description": "Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.",
      "initial_code": "class Solution:\n    def romanToInt(self, s: str) -> int:",
      "tests": [
        {
          "input": {
            "s": "III"
          },
          "expected": 3
        },
        {
          "input": {
            "s": "LVIII"
          },
          "expected": 58
        },
        {
          "input": {
            "s": "MCMXCIV"
          },
          "expected": 1994
        }
      ]
    },
    {
      "id": "twoSum",
      "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
      "initial_code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:",
      "tests": [
        {
          "input": {
            "nums": [2, 7, 11, 15],
            "target": 9
          },
          "expected": [0, 1]
        },
        {
          "input": {
            "nums": [3, 2, 4],
            "target": 6
          },
          "expected": [1, 2]
        },
        {
          "input": {
            "nums": [3, 3],
            "target": 6
          },
          "expected": [0, 1]
        }
      ]
    }
  ]
}