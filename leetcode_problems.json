{
  "problems": [
    {
      "id": "isPalindrome",
      "title": "Palindrome Number",
      "description": "Given an integer x, return true if x is a palindrome, and false otherwise.",
      "constraints": "-2^31 <= x <= 2^31 - 1",
      "function_signature": "def isPalindrome(x: int) -> bool:",
      "initial_code": "def isPalindrome(x: int) -> bool:\n    # Your solution here\n    pass",
      "tests": [
        {"input": [121], "expected": true},
        {"input": [-121], "expected": false},
        {"input": [10], "expected": false},
        {"input": [0], "expected": true},
        {"input": [12321], "expected": true}
      ]
    },
    {
      "id": "romanToInt",
      "title": "Roman to Integer", 
      "description": "Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M. Given a roman numeral, convert it to an integer.",
      "constraints": "1 <= s.length <= 15, s contains only the characters ('I', 'V', 'X', 'L', 'C', 'D', 'M')",
      "function_signature": "def romanToInt(s: str) -> int:",
      "initial_code": "def romanToInt(s: str) -> int:\n    # Your solution here\n    pass",
      "tests": [
        {"input": ["III"], "expected": 3},
        {"input": ["LVIII"], "expected": 58},
        {"input": ["MCMXCIV"], "expected": 1994},
        {"input": ["IV"], "expected": 4},
        {"input": ["IX"], "expected": 9}
      ]
    },
    {
      "id": "twoSum",
      "title": "Two Sum",
      "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target. You may assume that each input would have exactly one solution, and you may not use the same element twice.",
      "constraints": "2 <= nums.length <= 10^4, -10^9 <= nums[i] <= 10^9, -10^9 <= target <= 10^9, Only one valid answer exists",
      "function_signature": "def twoSum(nums: List[int], target: int) -> List[int]:",
      "initial_code": "def twoSum(nums: List[int], target: int) -> List[int]:\n    # Your solution here\n    pass",
      "tests": [
        {"input": [[2, 7, 11, 15], 9], "expected": [0, 1]},
        {"input": [[3, 2, 4], 6], "expected": [1, 2]},
        {"input": [[3, 3], 6], "expected": [0, 1]},
        {"input": [[1, 5, 3], 8], "expected": [1, 2]},
        {"input": [[2, 5, 5, 11], 10], "expected": [1, 2]}
      ]
    }
  ]
}